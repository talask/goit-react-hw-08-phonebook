{"version":3,"file":"static/js/654.eadbe522.chunk.js","mappings":"qRAEaA,EAASC,EAAAA,GAAAA,OAAH,0TAkBNC,EAAYD,EAAAA,GAAAA,IAAH,iGAMTE,EAAQF,EAAAA,GAAAA,MAAH,kDAILG,EAAaH,EAAAA,GAAAA,MAAH,qI,uJCvBjBI,EAAgB,CAClBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGNJ,GAAaH,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,sIAQZS,GAAaT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,2DAKHW,EAAgB,WAEzB,IAAMC,GAAWC,EAAAA,EAAAA,MAejB,OACI,SAAC,KAAD,WACA,SAAC,KAAD,CACIT,cAAiBA,EAEjBU,SAAY,SAACC,EAAD,GAA0B,IAAhBC,EAAe,EAAfA,WAlBT,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfR,GACES,EAAAA,EAAAA,IAAS,CACPhB,KAAMc,EAAKG,SAASjB,KAAKkB,MACzBjB,MAAOa,EAAKG,SAAShB,MAAMiB,MAC3BhB,SAAUY,EAAKG,SAASf,SAASgB,SAGrCJ,EAAKK,OACN,CASOC,CAAaV,GACbC,GACD,EAPL,UASI,UAAC,KAAD,YACI,SAAC,KAAD,UAAO,UAGP,SAACb,EAAD,CACIuB,KAAK,OACLrB,KAAK,UAET,SAACI,EAAD,CAAYJ,KAAK,OAAOsB,UAAU,SAClC,SAAC,KAAD,UAAO,WAGP,SAACxB,EAAD,CACIuB,KAAK,OACLrB,KAAK,WAET,SAACI,EAAD,CAAYJ,KAAK,QAAQsB,UAAU,SACnC,SAACxB,EAAD,CACIuB,KAAK,WACLrB,KAAK,cAET,SAACI,EAAD,CAAYJ,KAAK,QAAQsB,UAAU,SACnC,SAAC,KAAD,CAAQD,KAAK,SAAb,SAAsB,sBAKrC,C","sources":["components/ContactForm/ContactForm.styled.js","components/RegistredForm/RegistredForm.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Button = styled.button`\n    outline: none;\n    cursor: pointer;\n    display: block;\n    margin: 0 auto;\n    padding: 10px;\n    width: 150px;\n    \n    background: lightblue;\n    border: 1px solid lightblue;\n    border-radius: 5px;\n\n    &:hover {\n        background: blue;\n        color: white;\n    }\n`;\n\nexport const DivMyForm = styled.div`\n    border: 1px solid lightgrey;\n    width: 300px;\n    padding: 15px;\n`;\n\nexport const Label = styled.label`\n     margin-bottom: 5px;\n`;\n       \nexport const InputField = styled.input`\n    outline: none;\n    padding: 5px 8px;\n    margin-bottom: 10px;\n    width: 250px;\n    font-size: 18px;\n`;\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\n//import * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport styled from 'styled-components';\nimport { Button, DivMyForm, Label } from '../ContactForm/ContactForm.styled';\nimport { register } from 'redux/auth/operations';\n\nconst initialValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  const InputField = styled(Field)`\n    outline: none;\n    padding: 5px 8px;\n    margin-bottom: 10px;\n    width: 250px;\n    font-size: 18px;\n`;\n\nconst ErrorField = styled(ErrorMessage)`\n  color: red;\n  font-size: 10px;\n`\n\nexport const RegistredForm = () => {\n\n    const dispatch = useDispatch();\n    \n    const handleSubmit = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        dispatch(\n          register({\n            name: form.elements.name.value,\n            email: form.elements.email.value,\n            password: form.elements.password.value,\n          })\n        );\n        form.reset();\n      };\n\n    return (\n        <DivMyForm>\n        <Formik\n            initialValues = {initialValues}\n            //validationSchema = {schema}\n            onSubmit = {(values, {resetForm}) => {\n              \n              handleSubmit(values);\n              resetForm();\n            }}\n        >\n            <Form>\n                <Label>\n                 Name\n                </Label>\n                <InputField \n                    type=\"text\"\n                    name=\"name\"\n                />\n                <ErrorField name=\"name\" component=\"div\" />\n                <Label>\n                    Email\n                </Label>\n                <InputField \n                    type=\"mail\"\n                    name=\"email\"\n                />\n                <ErrorField name=\"phone\" component=\"div\" />\n                <InputField \n                    type=\"password\"\n                    name=\"password\"\n                />\n                <ErrorField name=\"phone\" component=\"div\" />\n                <Button type=\"submit\">Add contact</Button>\n            </Form>\n          </Formik>\n        </DivMyForm>\n    )\n}"],"names":["Button","styled","DivMyForm","Label","InputField","initialValues","name","email","password","Field","ErrorField","ErrorMessage","RegistredForm","dispatch","useDispatch","onSubmit","values","resetForm","e","preventDefault","form","currentTarget","register","elements","value","reset","handleSubmit","type","component"],"sourceRoot":""}